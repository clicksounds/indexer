name: Review Entry

on:
  issue_comment:
    types: [created]

env:
  PR_AUTHOR: ${{ github.event.issue.user.login }}
  ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
  COMMENT_AUTHOR: ${{ github.event.comment.user.login }}

jobs:
  check_issues:
    name: Check Issue
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.dirs.outputs.dirs }}
      verified: ${{ steps.verify.outputs.verify }}

    if: ${{ !github.event.issue.pull_request }}

    steps:        
    - name: Checkout Clicks Indexer
      uses: actions/checkout@v4
      with:
        path: code

    - name: Checkout Clicks Repo
      uses: actions/checkout@v4
      with:
        repository: clicksounds/clicks
        path: clicks
        token: ${{ secrets.COOP_BOT_PUSH_BIN_TOKEN }}

    - name: Checkout Mod Source
      uses: actions/checkout@v4
      with:
        repository: clicksounds/geode-clicksound
        path: modsource

    - name: Verify User
      id: verify_user
      shell: bash
      run: |
        echo result=`python3 code/.github/verify2.py modsource $COMMENT_AUTHOR` >> $GITHUB_OUTPUT
      env:
        COMMENT_AUTHOR: ${{ github.event.comment.user.login }}
        
    - name: Make Test Directory
      if: steps.verify_user.outputs.result == 'YES' && contains(github.event.comment.body, '!accept')
      run: mkdir test



    - name: Download File
      continue-on-error: true
      if: steps.verify_user.outputs.result == 'YES' && contains(github.event.comment.body, '!accept')
      id: download_file
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 2
        max_attempts: 5
        shell: bash
        command: |
          set +e
          python3 code/.github/DOWNLOAD_FILE.py >> result.txt
          RESULT=$?
          set -e

          cat result.txt

          echo "any silly errors?"
          if [ -f silly_log.txt ]; then
            cat silly_log.txt
          fi

          if [ $RESULT -eq 0 ]; then
            echo "Download successful, proceeding with next steps."
            exit 0
          else
            echo "Download failed, retrying..."
            exit 1
          fi
      env:
        ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
        COMMENT_AUTHOR: ${{ github.event.comment.user.login }}
        ISSUE_BODY: ${{ github.event.issue.body }}

    - name: Unzip Downloaded File
      continue-on-error: true
      if: steps.verify_user.outputs.result == 'YES' && contains(github.event.comment.body, '!accept') && steps.download_file.outputs.issue_err == ''
      run: |
        7z x "./test/yessir.zip" -o"./test/yessir"


    - name: Add Entry
      if: steps.verify_user.outputs.result == 'YES' && contains(github.event.comment.body, '!accept') && steps.download_file.outputs.issue_err == ''
      id: add_entry
      shell: bash
      run: |

        set +e
        python3 code/.github/issue.py clicks $ISSUE_AUTHOR >> result.txt
        RESULT=$?
        set -e

        cat result.txt

        echo "any silly errors?"
        if [ -f silly_log.txt ]; then
          cat silly_log.txt
        fi

        if [ $RESULT -eq 0 ]; then
          echo push_entry=YES >> $GITHUB_OUTPUT
        else
          echo push_entry=NO >> $GITHUB_OUTPUT
        fi

      env:
        ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
        COMMENT_AUTHOR: ${{ github.event.comment.user.login }}
        ISSUE_BODY: ${{ github.event.issue.body }}
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        VERIFY_USER_RESULT: ${{ steps.verify_user.outputs.result }}
        ACTUALLY_ACCEPTING: YES

    - name: Push to clicks repository
      shell: bash
      if: steps.verify_user.outputs.result == 'YES' && steps.add_entry.outputs.push_entry == 'YES' && contains(github.event.comment.body, '!accept')
      working-directory: ${{ github.workspace }}/clicks
      run: |
        git config --global user.name "$ISSUE_AUTHOR" || git config --global user.name "Click Sounds Adder"
        git config --global user.email "${{ github.event.issue.user.email }}" || echo "user doesn't have an email"
        git add -A
        git commit -m "New click - ${{ steps.add_entry.outputs.mod_id }}" -m "Accepted by: $COMMENT_AUTHOR"
        git config --global user.email "${{ secrets.COOP_BOT_EMAIL }}"
          git remote set-url origin "https://coopeeobot:${{ secrets.COOP_BOT_PUSH_BIN_TOKEN }}@github.com/clicksounds/clicks.git"
        git push -u origin main
    
    - name: Close Issue
      uses: peter-evans/close-issue@v3
      if: steps.verify_user.outputs.result == 'YES' && steps.add_entry.outputs.push_entry == 'YES' && contains(github.event.comment.body, '!accept')
      with:
        issue-number: ${{ github.event.issue.number }}
        comment: Successfully added your click sound!

    - name: Parse Edit Commands
      if: steps.verify_user.outputs.result == 'YES' && startsWith(github.event.comment.body, '!edit')
      id: parse_edit
      working-directory: code/.github
      run: |
        python3 parse_edit.py "${{ github.event.issue.number }}" "${{ github.event.comment.body }}"

    - name: Confirm Edit
      if: steps.parse_edit.outcome == 'success' && startsWith(github.event.comment.body, '!edit')
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.issue.number }}
        body-path: code/.github/edit_confirmation.txt

    - name: Log edit_commands file
      if: steps.verify_user.outputs.result == 'YES' && startsWith(github.event.comment.body, '!edit')
      run: |
        echo "--- edit_commands_${{ github.event.issue.number }}.json contents ---"
        cat edit_commands_${{ github.event.issue.number }}.json || echo "File not found."

    - name: Log pack.json after edits (on accept)
      if: steps.verify_user.outputs.result == 'YES' && contains(github.event.comment.body, '!accept')
      run: |
        echo "--- pack.json after edits ---"
        find . -name pack.json -exec cat {} \;

    - name: List files in code/.github after edit
      if: steps.verify_user.outputs.result == 'YES' && startsWith(github.event.comment.body, '!edit')
      working-directory: code/.github
      run: |
        echo "--- Listing files in code/.github/ ---"
        ls -l
